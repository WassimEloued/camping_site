{% extends 'base.html.twig' %}

{% block title %}My Dashboard{% endblock %}

{% block body %}
<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1>My Dashboard</h1>
        </div>
        <div class="col text-end">
            <button class="btn btn-danger" onclick="deleteAccount()">
                <i class="bi bi-trash"></i> Delete Account
            </button>
        </div>
    </div>

    <div class="row">
        <!-- User Profile Card -->
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">My Profile</h5>
                    <div class="text-center mb-3">
                        <i class="bi bi-person-circle" style="font-size: 4rem;"></i>
                    </div>
                    <p class="card-text"><strong>Email:</strong> {{ app.user.email }}</p>
                    <p class="card-text"><strong>Role:</strong> {{ app.user.role }}</p>
                    <a href="{{ path('user_profile_edit') }}" class="btn btn-primary">Edit Profile</a>
                </div>
            </div>
        </div>

        <!-- Created Events -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">My Created Events</h5>
                </div>
                <div class="card-body">
                    {% if createdEvents|length > 0 %}
                        <div class="list-group">
                            {% for event in createdEvents %}
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">{{ event.title }}</h6>
                                            <small class="text-muted">
                                                {{ event.startDate|date('M d, Y') }} - {{ event.endDate|date('M d, Y') }}
                                            </small>
                                        </div>
                                        <div class="btn-group">
                                            <a href="{{ path('event_show', {id: event.id}) }}" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="{{ path('event_edit', {id: event.id}) }}" class="btn btn-sm btn-outline-secondary">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-danger" onclick="deleteEvent({{ event.id }})">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% else %}
                        <p class="text-muted mb-0">You haven't created any events yet.</p>
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Joined Events -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Events I'm Attending</h5>
                </div>
                <div class="card-body">
                    {% if joinedEvents|length > 0 %}
                        <div class="list-group">
                            {% for event in joinedEvents %}
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">{{ event.title }}</h6>
                                            <small class="text-muted">
                                                {{ event.startDate|date('M d, Y') }} - {{ event.endDate|date('M d, Y') }}
                                            </small>
                                        </div>
                                        <a href="{{ path('event_show', {id: event.id}) }}" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% else %}
                        <p class="text-muted mb-0">You haven't joined any events yet.</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
{{ parent() }}
<script>
function deleteAccount() {
    if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
        fetch('{{ path('user_delete_account') }}', {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                window.location.href = '{{ path('app_home') }}';
            } else {
                alert(data.error || 'An error occurred while deleting your account.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while deleting your account.');
        });
    }
}

function deleteEvent(eventId) {
    if (confirm('Are you sure you want to delete this event? This action cannot be undone.')) {
        fetch(`/user/event/${eventId}/delete`, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                window.location.reload();
            } else {
                alert(data.error || 'An error occurred while deleting the event.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while deleting the event.');
        });
    }
}
</script>
{% endblock %}
{% endblock %}